def map A, B : (A -> A) -> [B] -> [B] =
    | _, [] => []
    \ f, [x .. xs] => [x:f .. xs:map(f)]

def doubled_then_squared = [1, 2, 3, 4, 5]
    :map(fn x => x * 2)
    :map(fn x => x * x)

def len A : [A] -> Nat =
    | [] => 0
    \ [_ .. xs] => 1 + xs:len

$[main]
def main = ()
