import "../core/monad.tao"

effect io = Str => ()

# Core monadic IO operations

fn __print : Str -> IO () = s, uni =>
    let uni = @print(uni, s) in
    (uni, ())

fn __input : IO Str = uni => @input(uni)

# High-level effect IO operations

fn print : Str -> io ~ () =
    s => @{ @suspend(s) }
