#data Result A, E =
#	| Ok A
#	| Err E

#data Maybe A =
#	| Just A
#	| Nil

type Str = [Char]

type Person = {
	name: Str,
	age: Num,
}

def make_person of ? -> ? -> Person = |name, age| { name, age }

def bob = make_person("Bob", 35)

def lucy = bob with
	name: "Lucy",
	age: age + 5,

def main = lucy.name

def odds_of = |xs| match xs in
	[x, xs: ...] => xs:odds_of with
		sum: sum + x,
		odds: if x % 2 = 0
			then odds
			else [x] ++ odds,,
	_ => { sum: 0, odds: [] },

#def main = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]:odds_of

def len A of [A] -> ? = |xs| match xs in
	[_, tail: ...] => 1 + tail:len,
	_ => 0,
