def five = 5
def five: Nat = 5

def add :: Nat -> Nat -> Nat = fn x y => x + y

fn add x, y in

|x, y| x + y
for x, y => x + y
fn x, y in x + y
fn x, y => x + y
fn x, y -> x + y
fn x, y = x + y
fn add x, y = x + y

let x = y in x
let x <- y in x

match xs in
| [x] => double x
| [x, xs: ...] =>

