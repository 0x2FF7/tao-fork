import "lib/std.tao"

data Natural =
    | Zero
    \ Succ Natural

member Natural of Eq =
    => eq = fn
        | Zero, Zero => True
        | Succ x, Succ y => x = y
        \ _, _ => False

fn show_negative A : A -> Str where
    A < Neg,
    A.Output < Neg,
    A.Output.Output < Neg,
    A.Output.Output.Output < Neg,
    A.Output.Output.Output.Output < Show,
=
    a => (----a):show

def main = [1, 2, 3, 4]:sum

class VecData A =
    => Proj

data Three

for A member Three of VecData A =
    => Proj = { x : A, y : A, z : A }

data Vec A, N < VecData A = N.Proj

def v3 : Vec Nat Three = Vec {
    x : 4,
    y : 5,
    z : 6,
}

# def main : IO () =
#     print("hello")
