import "lib/std.tao"

data Natural =
    | Zero
    \ Succ Natural

member Natural of Eq =
    => eq = fn
        | Zero, Zero => True
        | Succ x, Succ y => x = y
        \ _, _ => False

fn show_negative A : A -> Str where
    A < Neg,
    A.Output < Neg,
    A.Output.Output < Neg,
    A.Output.Output.Output < Neg,
    A.Output.Output.Output.Output < Show,
=
    a => (----a):show

def main = show_negative(5i)

class Foo where Self.Item < Show =
    => Item

member () of Foo =
    => Item = Nat

# def main : IO () =
#     print("hello")
