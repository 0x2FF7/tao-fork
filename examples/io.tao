import "lib/parse.tao"

fn eq : Str -> Str -> Bool =
    | [], [] => True
    | [x .. xs], [y .. ys] => x = y and xs:eq(ys)
    \ _, _ => False

$[main]
def main : IO () = do {
    ["a", "b", "c", "d"]
        :into_stream
        :for_each(fn x => do {
            print("Element = " ++ x);
        });

    while(do {
        print("Enter an expression to evaluate, q to quit");
        let text <- input;
        if text:eq("q") then do {
            print("Ok, goodbye");
            return False
        } else do {
            match text:parse(expr_parser) in
                | Ok expr => print(expr:eval:display)
                \ Err err => print("Failed to parse expression '" ++ text ++ "'")
            ;
            return True
        }
    })
}
